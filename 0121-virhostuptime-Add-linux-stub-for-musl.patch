From: Michal Privoznik <mprivozn@redhat.com>
Date: Mon, 14 Oct 2019 16:37:03 +0200
Subject: [PATCH] virhostuptime: Add linux stub for musl

When we want to know the boot timestamp of the host, we can call
virHostGetBootTime(). Under the hood, it uses getutxid() which is
defined by POSIX and properly check for in configure. However,
musl took a path where it declares the function but instead of
providing any useful implementation it returns NULL meaning "no
record found". If that's the case, use our second best option -
/proc/uptime and a bit of maths.

https://bugzilla.redhat.com/show_bug.cgi?id=1760885

Signed-off-by: Michal Privoznik <mprivozn@redhat.com>
Reviewed-by: Cole Robinson <crobinso@redhat.com>
(cherry picked from commit 070d6969fe912b8f2e9aadee88c6bdda00a65f4f)
Signed-off-by: rpm-build <rpm-build>

Conflicts:
po/POTFILES.in
---
 src/util/virhostuptime.c | 62 ++++++++++++++++++++++++++++++++++++++--
 1 file changed, 59 insertions(+), 3 deletions(-)

diff --git a/src/util/virhostuptime.c b/src/util/virhostuptime.c
index 62b781acd5..a203961996 100644
--- a/src/util/virhostuptime.c
+++ b/src/util/virhostuptime.c
@@ -25,16 +25,68 @@
 #endif
 
 #include "virhostuptime.h"
+#include "viralloc.h"
+#include "virfile.h"
+#include "virlog.h"
+#include "virstring.h"
+#include "virtime.h"
 #include "virthread.h"
 
+#define VIR_FROM_THIS VIR_FROM_NONE
+
+VIR_LOG_INIT("util.virhostuptime");
+
 static unsigned long long bootTime;
 static int bootTimeErrno;
 static virOnceControl virHostGetBootTimeOnce = VIR_ONCE_CONTROL_INITIALIZER;
 
-#ifdef HAVE_GETUTXID
+#if defined(__linux__)
+# define UPTIME_FILE  "/proc/uptime"
+static int
+virHostGetBootTimeProcfs(unsigned long long *btime)
+{
+    unsigned long long now;
+    double up;
+    VIR_AUTOFREE(char *) buf = NULL;
+    char *tmp;
+
+    if (virTimeMillisNow(&now) < 0)
+        return -errno;
+
+    /* 1KiB limit is more than enough. */
+    if (virFileReadAll(UPTIME_FILE, 1024, &buf) < 0)
+        return -errno;
+
+    /* buf contains two doubles now:
+     *   $uptime $idle_time
+     * We're interested only in the first one */
+    if (!(tmp = strchr(buf, ' '))) {
+        virReportError(VIR_ERR_INTERNAL_ERROR,
+                       _("uptime file has unexpected format '%s'"),
+                       buf);
+        return -EINVAL;
+    }
+
+    *tmp = '\0';
+
+    if (virStrToDouble(buf, NULL, &up) < 0) {
+        virReportError(VIR_ERR_INTERNAL_ERROR,
+                       _("Unable to parse uptime value '%s'"),
+                       buf);
+        return -EINVAL;
+    }
+
+    *btime = now / 1000 - up + 0.5;
+
+    return 0;
+}
+#endif /* defined(__linux__) */
+
+#if defined(HAVE_GETUTXID) || defined(__linux__)
 static void
 virHostGetBootTimeOnceInit(void)
 {
+# ifdef HAVE_GETUTXID
     struct utmpx id = {.ut_type = BOOT_TIME};
     struct utmpx *res = NULL;
 
@@ -45,16 +97,20 @@ virHostGetBootTimeOnceInit(void)
     }
 
     endutxent();
+# endif /* HAVE_GETUTXID */
+
+    if (bootTimeErrno != 0 || bootTime == 0)
+        bootTimeErrno = -virHostGetBootTimeProcfs(&bootTime);
 }
 
-#else /* !HAVE_GETUTXID */
+#else /* !defined(HAVE_GETUTXID) && !defined(__linux__) */
 
 static void
 virHostGetBootTimeOnceInit(void)
 {
     bootTimeErrno = ENOSYS;
 }
-#endif /* HAVE_GETUTXID */
+#endif /* !defined(HAVE_GETUTXID) && !defined(__linux__) */
 
 /**
  * virHostGetBootTime:
